#+title: UniAgda.Core.Types.Empty
#+description: Empty Type
#+author: James Leslie
#+STARTUP: noindent hideblocks latexpreview
#+OPTIONS: tex:t
* Prelude
#+begin_src agda2
{-# OPTIONS --without-K --no-import-sorts --safe #-}
module UniAgda.Core.Types.Empty where

open import UniAgda.Core.Types.Universes
#+end_src
* Empty Type
The empty type is an inductive type with no elements defined.
#+begin_src agda2
data Empty : Type lzero where
#+end_src
* Induction
The induction principle is defined as follows:
#+begin_src agda2
Empty-ind : ∀ {i} {A : Type i}
            → Empty → A
Empty-ind ()
#+end_src  
* Negation
The empty type allows us to define logical negation.
#+begin_src agda2
¬ : ∀ {i}
    (A : Type i)
    → Type i
¬ A = A → Empty
infix 50 ¬
#+end_src
