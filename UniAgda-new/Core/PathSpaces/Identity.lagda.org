#+title: Paths in Identity Types
#+author: James Leslie
#+STARTUP: noindent hideblocks latexpreview
* Prelude
#+begin_src agda2
{-# OPTIONS --without-K --safe #-}
module UniAgda-new.Core.PathSpaces.Identity where
open import UniAgda-new.Core.Types.Main
open import UniAgda-new.Core.PathAlgebra
open import UniAgda-new.Core.Homotopy
open import UniAgda-new.Core.Equivalences
#+end_src
* Paths in Identity Types
#+begin_src agda2
private
  lemma₁ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (a a' : A) (p : a ≡ a')
           → ap f p ≡ ((whisker-r α f a ^) ∘ (ap f (ap (g o f) p))) ∘ whisker-r α f a'
  lemma₁ f g α a .a refl = p=qr^-to-pr=q (whisker-r α f a ^ ∘ refl) refl (whisker-r α f a) (p-refl (α (f a) ^)) ^

  lemma₂ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (β : g o f ~ id) (a a' : A) (p : a ≡ a')
           → ap (g o f) p ≡ β a ∘ p ∘ β a' ^
  lemma₂ f g β a .a refl = pp^ (β a) ^

  lemma₄ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (β : g o f ~ id) (a a' : A) (p : a ≡ a')
           → ((whisker-r α f a ^) ∘ (ap f (ap (g o f) p))) ∘ whisker-r α f a' ≡ ((whisker-r α f a ^) ∘ (ap f (β a ∘ p ∘ β a' ^))) ∘ whisker-r α f a'
  lemma₄ f g α β a .a refl = p=q-to-pr=qr (p=q-to-rp=rq (transport (λ t → refl ≡ ap f (t)) ((pp^ (β a)) ^) refl) (α (f a) ^) ) (whisker-r α f a)

  lemma₅a : {i : Level} {A : Type i} {x y z w : A}
            → (p : x ≡ y) (r : x ≡ z) (s : z ≡ w)
            → p ∘ (p ^ ∘ r ∘ s) ∘ s ^ ≡ r
  lemma₅a refl refl refl = refl


  lemma₅ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (β : g o f ~ id) (a a' : A) (p' : g (f a) ≡ g (f a'))
         → ((whisker-r α f a ^) ∘ (ap f (β a ∘ (β a ^ ∘ p' ∘ β a') ∘ β a' ^))) ∘ whisker-r α f a' ≡ ((whisker-r α f a ^) ∘ ap f p') ∘ (whisker-r α f a')
  lemma₅ f g α β a a' p' = p=q-to-pr=qr (p=q-to-rp=rq (ap (λ p → ap f p) (lemma₅a (β a) p' (β a'))) (α (f a) ^)) (whisker-r α f a')

  lemma₆ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (a a' : A) (q : f a ≡ f a')
         → ((whisker-r α f a ^) ∘ ap f (ap g q)) ∘ (whisker-r α f a') ≡ q
  lemma₆ f g α a a' q = (ass-l (whisker-r α f a ^) (ap f (ap g q)) (whisker-r α f a') ∘ p=qr-to-q^p=r (ap f (ap g q) ∘ whisker-r α f a') (ap id q) (whisker-r α f a) (ap (λ p → p ∘ whisker-r α f a') ((ap-gf f g q) ^) ∘ (homotopy-natural α q ) ^)) ∘ ap-id q

  thm2-11-1-inv : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (β : g o f ~ id) (a a' : A)
                  → f a ≡ f a' → a ≡ a'
  thm2-11-1-inv f g α β a a' X = (β a) ^ ∘ ap g X ∘ β a'

  thm2-11-1-τ : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (α : f o g ~ id) (β : g o f ~ id) (a a' : A) (q : f a ≡ f a')
                → ap f (β a ^ ∘ ap g q ∘ β a') ≡ q
  thm2-11-1-τ f g α β a a' q = lemma₁ f g α a a' (β a ^ ∘ ap g q ∘ β a') ∘
    lemma₄ f g α β a a' (β a ^ ∘ ap g q ∘ β a') ∘
    lemma₅ f g α β a a' (ap g q) ∘
    lemma₆ f g α a a' q

  thm2-11-1-ε : {i j : Level} {A : Type i} {B : Type j} (f : A → B) (g : B → A) (β : g o f ~ id) (a a' : A) (p : a ≡ a')
                → β a ^ ∘ ap g (ap f p) ∘ β a' ≡ p
  thm2-11-1-ε f g β a .a refl = p^p (β a)
#+end_src

#+begin_src agda2
thm2-11-1 : {i j : Level} {A : Type i} {B : Type j} {f : A → B} {a a' : A}
            → isEquiv f
            → isEquiv (λ (p : a ≡ a') → ap f p)
thm2-11-1 {i} {j} {A} {B} {f} {a} {a'} X =
  let g = pr₁ X
      β = pr₁ (pr₂ X)
      α = pr₁ (pr₂ (pr₂ X))
  in
  isequiv-adjointify
    (thm2-11-1-inv f g α β a a' ,
    thm2-11-1-τ f g α β a a' ,
    thm2-11-1-ε f g β a a')
#+end_src
* Other results
#+begin_src agda2
lemma2-11-2i : {i : Level} {A : Type i} {x₁ x₂ : A}
               (a : A) (p : x₁ ≡ x₂) (q : a ≡ x₁)
               → transport (λ x → a ≡ x) p q ≡ q ∘ p
lemma2-11-2i a refl q = p-refl q ^

lemma2-11-2ii : {i : Level} {A : Type i} {x₁ x₂ : A}
                (a : A) (p : x₁ ≡ x₂) (q : x₁ ≡ a)
               → transport (λ x → x ≡ a) p q ≡ p ^ ∘ q
lemma2-11-2ii a refl q = refl

lemma2-11-2iii : {i : Level} {A : Type i} {x₁ x₂ : A}
                 (a : A) (p : x₁ ≡ x₂) (q : x₁ ≡ x₁)
                 → transport (λ x → x ≡ x) p q ≡ p ^ ∘ q ∘ p
lemma2-11-2iii a refl q = p-refl q ^

thm2-11-3 : {i j : Level} {A : Type i} {B : Type j} {a a' : A}
            → (f g : A → B) (p : a ≡ a') (q : f a ≡ g a)
            → transport (λ x → f x ≡ g x) p q ≡ (ap f p) ^ ∘ q ∘ ap g p
thm2-11-3 f g refl q = p-refl q ^

thm2-11-4 : {i j : Level} {A : Type i} {B : A → Type j} {a a' : A}
            (f g : (x : A) → B x) (p : a ≡ a') (q : f a ≡ g a)
            → transport (λ x → f x ≡ g x) p q ≡ (apD f p) ^ ∘ ap (transport B p) q ∘ apD g p
thm2-11-4 f g refl q = ap-id q ^ ∘ (p-refl (ap id q) ^)

thm2-11-5 : {i : Level} {A : Type i} {a a' : A}
            (p : a ≡ a') (q : a ≡ a) (r : a' ≡ a')
            → (transport (λ x → (x ≡ x)) p q ≡ r) ≃ (q ∘ p ≡ p ∘ r)
thm2-11-5 refl q r = equiv-adjointify ((λ { x → p-refl q ∘ x}) , (λ { x → p-refl q ^ ∘ x}) ,
  (λ { refl → prefl-o-prefl^ {_} {_} {_} {q}}) , λ {refl → prefl^-o-prefl {_} {_} {_} {q}})
#+end_src

